{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/excel-utils.ts"],"sourcesContent":["\n'use server';\n\nimport * as XLSX from 'xlsx';\nimport type { ExcelRow, ExcelData } from '@/types';\n\ntype Filter = {\n    column: string;\n    value: string;\n};\n\nexport async function getExcelSheetNames(fileAsDataUri: string): Promise<string[]> {\n    const base64Data = fileAsDataUri.split(',')[1];\n    const buffer = Buffer.from(base64Data, 'base64');\n    const workbook = XLSX.read(buffer, { type: 'buffer' });\n    return workbook.SheetNames;\n}\n\nexport async function processExcelFile(\n    fileAsDataUri: string, \n    sheetName: string,\n    filters?: Filter[]\n): Promise<ExcelData> {\n  const base64Data = fileAsDataUri.split(',')[1];\n  const buffer = Buffer.from(base64Data, 'base64');\n  const workbook = XLSX.read(buffer, { type: 'buffer' });\n\n  const worksheet = workbook.Sheets[sheetName];\n  if (!worksheet) {\n      throw new Error(`Sheet \"${sheetName}\" not found in the workbook.`);\n  }\n\n  const jsonData: any[][] = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n  \n  if (jsonData.length === 0) {\n    return { headers: [], rows: [] };\n  }\n\n  const headers = jsonData[0].map(String);\n  let rows = jsonData.slice(1).map(row => {\n    const rowData: ExcelRow = {};\n    headers.forEach((header, index) => {\n      rowData[header] = row[index];\n    });\n    return rowData;\n  });\n\n  if (filters && filters.length > 0) {\n      rows = rows.filter(row => {\n          return filters.every(filter => {\n              if (filter.column && filter.value) {\n                  return String(row[filter.column] ?? '').trim() === filter.value.trim();\n              }\n              return true;\n          });\n      });\n  }\n  \n  return { headers, rows };\n}\n"],"names":[],"mappings":";;;;;;AAGA;;;;;AAQO,eAAe,mBAAmB,aAAqB;IAC1D,MAAM,aAAa,cAAc,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9C,MAAM,SAAS,OAAO,IAAI,CAAC,YAAY;IACvC,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,OAAS,AAAD,EAAE,QAAQ;QAAE,MAAM;IAAS;IACpD,OAAO,SAAS,UAAU;AAC9B;AAEO,eAAe,iBAClB,aAAqB,EACrB,SAAiB,EACjB,OAAkB;IAEpB,MAAM,aAAa,cAAc,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9C,MAAM,SAAS,OAAO,IAAI,CAAC,YAAY;IACvC,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,OAAS,AAAD,EAAE,QAAQ;QAAE,MAAM;IAAS;IAEpD,MAAM,YAAY,SAAS,MAAM,CAAC,UAAU;IAC5C,IAAI,CAAC,WAAW;QACZ,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,UAAU,4BAA4B,CAAC;IACrE;IAEA,MAAM,WAAoB,6HAAA,CAAA,QAAU,CAAC,aAAa,CAAC,WAAW;QAAE,QAAQ;IAAE;IAE1E,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,OAAO;YAAE,SAAS,EAAE;YAAE,MAAM,EAAE;QAAC;IACjC;IAEA,MAAM,UAAU,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC;IAChC,IAAI,OAAO,SAAS,KAAK,CAAC,GAAG,GAAG,CAAC,CAAA;QAC/B,MAAM,UAAoB,CAAC;QAC3B,QAAQ,OAAO,CAAC,CAAC,QAAQ;YACvB,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM;QAC9B;QACA,OAAO;IACT;IAEA,IAAI,WAAW,QAAQ,MAAM,GAAG,GAAG;QAC/B,OAAO,KAAK,MAAM,CAAC,CAAA;YACf,OAAO,QAAQ,KAAK,CAAC,CAAA;gBACjB,IAAI,OAAO,MAAM,IAAI,OAAO,KAAK,EAAE;oBAC/B,OAAO,OAAO,GAAG,CAAC,OAAO,MAAM,CAAC,IAAI,IAAI,IAAI,OAAO,OAAO,KAAK,CAAC,IAAI;gBACxE;gBACA,OAAO;YACX;QACJ;IACJ;IAEA,OAAO;QAAE;QAAS;IAAK;AACzB;;;IAhDsB;IAOA;;AAPA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/update-data/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {processExcelFile as '70a70a002e8f4de023f15547f8c2e4edfd1264cac1'} from 'ACTIONS_MODULE0'\nexport {getExcelSheetNames as '4061dd86f1c8ce5e24f133f6e04f7d09fb0221ad96'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/update-data/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/update-data/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/update-data/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/update-data/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/update-data/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/update-data/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}