{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-executive-summary.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates an executive summary of the WCE 2025 program's health.\n *\n * - generateExecutiveSummary - A function that generates the executive summary.\n * - GenerateExecutiveSummaryInput - The input type for the generateExecutiveSummary function.\n * - GenerateExecutiveSummaryOutput - The return type for the generateExecutiveSummary function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateExecutiveSummaryInputSchema = z.object({\n  pillarStatuses: z.record(z.string(), z.enum(['Green', 'Amber', 'Red'])).describe('The health status of each pillar (Green, Amber, Red).'),\n  subItemStatuses: z.record(z.string(), z.enum(['Green', 'Amber', 'Red'])).describe('The health status of each sub-item within each pillar (Green, Amber, Red).'),\n});\nexport type GenerateExecutiveSummaryInput = z.infer<typeof GenerateExecutiveSummaryInputSchema>;\n\nconst GenerateExecutiveSummaryOutputSchema = z.object({\n  summary: z.string().describe('The executive summary of the WCE 2025 program health.'),\n});\nexport type GenerateExecutiveSummaryOutput = z.infer<typeof GenerateExecutiveSummaryOutputSchema>;\n\nexport async function generateExecutiveSummary(input: GenerateExecutiveSummaryInput): Promise<GenerateExecutiveSummaryOutput> {\n  return generateExecutiveSummaryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateExecutiveSummaryPrompt',\n  input: {schema: GenerateExecutiveSummaryInputSchema},\n  output: {schema: GenerateExecutiveSummaryOutputSchema},\n  prompt: `You are an executive assistant providing a summary of the World Class Engineering 2025 program's health.\n\n  Based on the pillar and sub-item statuses, generate a concise executive summary highlighting key areas of concern (Amber/Red statuses) and areas of success (Green statuses).\n\nPillar Statuses:\n{{#each pillarStatuses}}\n- {{key}}: {{this}}\n{{/each}}\n\nSub-item Statuses:\n{{#each subItemStatuses}}\n- {{key}}: {{this}}\n{{/each}}\n  \nFocus on providing actionable insights for executive leadership.\n`,\n});\n\nconst generateExecutiveSummaryFlow = ai.defineFlow(\n  {\n    name: 'generateExecutiveSummaryFlow',\n    inputSchema: GenerateExecutiveSummaryInputSchema,\n    outputSchema: GenerateExecutiveSummaryOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,sCAAsC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAS;KAAM,GAAG,QAAQ,CAAC;IACjF,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAS;KAAM,GAAG,QAAQ,CAAC;AACpF;AAGA,MAAM,uCAAuC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,yBAAyB,KAAoC;IACjF,OAAO,6BAA6B;AACtC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAmC;IACnD,QAAQ;QAAC,QAAQ;IAAoC;IACrD,QAAQ,CAAC;;;;;;;;;;;;;;;AAeX,CAAC;AACD;AAEA,MAAM,+BAA+B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAChD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateExecutiveSummary as '40b11ac9ad14d23024b370d4895192a0dec1eeba26'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["export const WceLogo = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\n    <path d=\"M2 17l10 5 10-5\" />\n    <path d=\"M2 12l10 5 10-5\" />\n  </svg>\n);\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,CAAC,sBACtB,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACd,GAAG,KAAK;;0BAET,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { WceLogo } from \"@/components/icons\";\n\nexport function Header({ children }: { children?: React.ReactNode }) {\n  return (\n    <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background/80 px-4 backdrop-blur-sm md:px-6\">\n      <nav className=\"flex w-full items-center gap-6 text-lg font-medium md:text-sm\">\n        <Link\n          href=\"/\"\n          className=\"flex items-center gap-2 text-lg font-semibold md:text-base\"\n        >\n          <WceLogo className=\"h-6 w-6 text-primary\" />\n          <span className=\"text-nowrap\">WCE 2025 Dashboard</span>\n        </Link>\n        <div className=\"ml-auto flex items-center gap-4\">\n          {children}\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS,OAAO,EAAE,QAAQ,EAAkC;IACjE,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;;sCAEV,8OAAC,2HAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,8OAAC;4BAAK,WAAU;sCAAc;;;;;;;;;;;;8BAEhC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import {\n  TrendingUp,\n  ShieldCheck,\n  Scaling,\n  Cpu,\n  Landmark,\n} from \"lucide-react\";\nimport type { Pillar, Status } from \"@/types\";\n\nexport const pillars: Pillar[] = [\n  {\n    id: \"improving-productivity\",\n    name: \"Improving Productivity\",\n    description:\n      \"Enhancing engineering efficiency through better tools, processes, and workflows.\",\n    icon: TrendingUp,\n    subItems: [\n      {\n        id: \"dev-velocity\",\n        name: \"Developer Velocity\",\n        status: \"Green\",\n        description: \"Cycle time from commit to production.\",\n      },\n      {\n        id: \"ci-cd-pipeline\",\n        name: \"CI/CD Pipeline Optimization\",\n        status: \"Amber\",\n        description: \"Efficiency and speed of the integration and deployment pipeline.\",\n      },\n      {\n        id: \"eng-docs\",\n        name: \"Engineering Documentation\",\n        status: \"Green\",\n        description: \"Quality and availability of technical documentation.\",\n      },\n    ],\n  },\n  {\n    id: \"building-reliable-products\",\n    name: \"Building Reliable Products\",\n    description:\n      \"Ensuring products are robust, available, and performant.\",\n    icon: ShieldCheck,\n    subItems: [\n      {\n        id: \"uptime\",\n        name: \"Service Level Uptime\",\n        status: \"Green\",\n        description: \"Availability of critical services, measured against SLOs.\",\n      },\n      {\n        id: \"error-rate\",\n        name: \"Production Error Rate\",\n        status: \"Red\",\n        description: \"Rate of unhandled errors and exceptions in production.\",\n      },\n      {\n        id: \"perf-testing\",\n        name: \"Performance Testing\",\n        status: \"Amber\",\n        description: \"Regularity and coverage of performance and load testing.\",\n      },\n    ],\n  },\n  {\n    id: \"making-design-resilient\",\n    name: \"Making Design Resilient\",\n    description:\n      \"Creating scalable and fault-tolerant system architectures.\",\n    icon: Scaling,\n    subItems: [\n      {\n        id: \"system-scalability\",\n        name: \"System Scalability\",\n        status: \"Green\",\n        description: \"Ability of systems to handle increased load.\",\n      },\n      {\n        id: \"disaster-recovery\",\n        name: \"Disaster Recovery Plan\",\n        status: \"Green\",\n        description: \"Effectiveness and testing of the disaster recovery strategy.\",\n      },\n      {\n        id: \"dependency-management\",\n        name: \"Dependency Management\",\n        status: \"Amber\",\n        description: \"Clarity and resilience of inter-service dependencies.\",\n      },\n    ],\n  },\n  {\n    id: \"adopting-emerging-technologies\",\n    name: \"Adopting Emerging Tech\",\n    description:\n      \"Leveraging new technologies like AI and serverless to drive innovation.\",\n    icon: Cpu,\n    subItems: [\n      {\n        id: \"explore-resiliency-program\",\n        name: \"Explore Resiliency Program\",\n        status: \"Amber\",\n        description:\n          \"Explore Resiliency program to cover the Design & cloud adoption.\",\n      },\n      {\n        id: \"hackathons\",\n        name: \"Use Case Discovery (Hackathons)\",\n        status: \"Green\",\n        description:\n          \"Discover new use cases through hackathons and innovation challenges.\",\n      },\n      {\n        id: \"industry-events\",\n        name: \"Industry Events\",\n        status: \"Amber\",\n        description:\n          \"Demonstrate DTI Emerging Tech in industry events to foster innovation.\",\n      },\n      {\n        id: \"blogs-open-source\",\n        name: \"Blogs and Open Source\",\n        status: \"Green\",\n        description:\n          \"Publish blogs and contribute to open source to share knowledge.\",\n      },\n      {\n        id: \"tech-sphere-sessions\",\n        name: \"Tech Sphere Sessions\",\n        status: \"Green\",\n        description:\n          \"Increase participation and audience coverage for Tech Sphere Sessions.\",\n      },\n      {\n        id: \"mentorship-program\",\n        name: \"Mentorship Program\",\n        status: \"Green\",\n        description:\n          \"Mentor & Mentee between Business and Technology.\",\n      },\n    ],\n  },\n  {\n    id: \"world-class-corporate-governance\",\n    name: \"World Class Governance\",\n    description:\n      \"Upholding the highest standards of security, compliance, and process.\",\n    icon: Landmark,\n    subItems: [\n      {\n        id: \"security-compliance\",\n        name: \"Security Compliance\",\n        status: \"Green\",\n        description: \"Adherence to industry security standards (e.g., SOC 2, ISO 27001).\",\n      },\n      {\n        id: \"incident-management\",\n        name: \"Incident Management Process\",\n        status: \"Green\",\n        description: \"Clarity and effectiveness of the on-call and incident response process.\",\n      },\n      {\n        id: \"access-control\",\n        name: \"Access Control Policies\",\n        status: \"Amber\",\n        description: \"Regular review and audit of system access permissions.\",\n      },\n    ],\n  },\n];\n\nexport function getPillarById(id: string) {\n  return pillars.find((p) => p.id === id);\n}\n\nexport function getPillarStatus(pillarId: string): Status {\n  const pillar = getPillarById(pillarId);\n  if (!pillar) return \"Red\";\n\n  const statuses = pillar.subItems.map((item) => item.status);\n  if (statuses.includes(\"Red\")) return \"Red\";\n  if (statuses.includes(\"Amber\")) return \"Amber\";\n  return \"Green\";\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASO,MAAM,UAAoB;IAC/B;QACE,IAAI;QACJ,MAAM;QACN,aACE;QACF,MAAM,kNAAA,CAAA,aAAU;QAChB,UAAU;YACR;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,aACE;QACF,MAAM,oNAAA,CAAA,cAAW;QACjB,UAAU;YACR;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,aACE;QACF,MAAM,wMAAA,CAAA,UAAO;QACb,UAAU;YACR;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,aACE;QACF,MAAM,gMAAA,CAAA,MAAG;QACT,UAAU;YACR;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aACE;YACJ;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,aACE;QACF,MAAM,0MAAA,CAAA,WAAQ;QACd,UAAU;YACR;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,aAAa;YACf;SACD;IACH;CACD;AAEM,SAAS,cAAc,EAAU;IACtC,OAAO,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;AACtC;AAEO,SAAS,gBAAgB,QAAgB;IAC9C,MAAM,SAAS,cAAc;IAC7B,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,WAAW,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM;IAC1D,IAAI,SAAS,QAAQ,CAAC,QAAQ,OAAO;IACrC,IAAI,SAAS,QAAQ,CAAC,UAAU,OAAO;IACvC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/status-indicator.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\nimport type { Status } from \"@/types\";\n\nconst statusStyles: Record<Status, string> = {\n  Green: \"bg-green-500\",\n  Amber: \"bg-amber-500\",\n  Red: \"bg-red-500\",\n};\n\nexport function StatusIndicator({\n  status,\n  className,\n}: {\n  status: Status;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)}>\n      <span\n        className={cn(\n          \"h-3 w-3 rounded-full\",\n          statusStyles[status]\n        )}\n        aria-hidden=\"true\"\n      />\n      <span>{status}</span>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,eAAuC;IAC3C,OAAO;IACP,OAAO;IACP,KAAK;AACP;AAEO,SAAS,gBAAgB,EAC9B,MAAM,EACN,SAAS,EAIV;IACC,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;;0BAC5C,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wBACA,YAAY,CAAC,OAAO;gBAEtB,eAAY;;;;;;0BAEd,8OAAC;0BAAM;;;;;;;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/pillar-card.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { StatusIndicator } from \"./status-indicator\";\nimport type { Pillar } from \"@/types\";\nimport { getPillarStatus } from \"@/lib/data\";\n\nexport function PillarCard({ pillar }: { pillar: Pillar }) {\n  const status = getPillarStatus(pillar.id);\n\n  return (\n    <Link href={`/pillar/${pillar.id}`} className=\"block hover:shadow-lg transition-shadow duration-300 rounded-lg\">\n      <Card className=\"flex flex-col justify-between h-full transition-colors hover:border-accent\">\n        <CardHeader>\n          <div className=\"mb-4\">\n            <pillar.icon className=\"h-8 w-8 text-accent\" />\n          </div>\n          <CardTitle>{pillar.name}</CardTitle>\n          <CardDescription className=\"line-clamp-2\">{pillar.description}</CardDescription>\n        </CardHeader>\n        <CardFooter>\n          <StatusIndicator status={status} />\n        </CardFooter>\n      </Card>\n    </Link>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAQA;AAEA;;;;;;AAEO,SAAS,WAAW,EAAE,MAAM,EAAsB;IACvD,MAAM,SAAS,CAAA,GAAA,kHAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,EAAE;IAExC,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;QAAE,WAAU;kBAC5C,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,OAAO,IAAI;gCAAC,WAAU;;;;;;;;;;;sCAEzB,8OAAC,gIAAA,CAAA,YAAS;sCAAE,OAAO,IAAI;;;;;;sCACvB,8OAAC,gIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAgB,OAAO,WAAW;;;;;;;;;;;;8BAE/D,8OAAC,gIAAA,CAAA,aAAU;8BACT,cAAA,8OAAC,sJAAA,CAAA,kBAAe;wBAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAKnC","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/executive-summary.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ExecutiveSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ExecutiveSummary() from the server but ExecutiveSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/executive-summary.tsx <module evaluation>\",\n    \"ExecutiveSummary\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,gFACA","debugId":null}},
    {"offset": {"line": 913, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/executive-summary.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ExecutiveSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ExecutiveSummary() from the server but ExecutiveSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/executive-summary.tsx\",\n    \"ExecutiveSummary\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,4DACA","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 937, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 961, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { Header } from \"@/components/layout/header\";\nimport { pillars, getPillarStatus } from \"@/lib/data\";\nimport { PillarCard } from \"@/components/dashboard/pillar-card\";\nimport { ExecutiveSummary } from \"@/components/dashboard/executive-summary\";\nimport { Suspense } from \"react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function Home() {\n  const allPillarStatuses = pillars.reduce(\n    (acc, pillar) => {\n      acc[pillar.name] = getPillarStatus(pillar.id);\n      return acc;\n    },\n    {} as Record<string, \"Green\" | \"Amber\" | \"Red\">\n  );\n\n  const allSubItemStatuses = pillars\n    .flatMap((p) => p.subItems)\n    .reduce(\n      (acc, item) => {\n        acc[item.name] = item.status;\n        return acc;\n      },\n      {} as Record<string, \"Green\" | \"Amber\" | \"Red\">\n    );\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col\">\n      <Header>\n        <Suspense fallback={<Skeleton className=\"h-9 w-48\" />}>\n          <ExecutiveSummary\n            pillarStatuses={allPillarStatuses}\n            subItemStatuses={allSubItemStatuses}\n          />\n        </Suspense>\n      </Header>\n      <main className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\">\n        <div className=\"grid gap-4 md:grid-cols-2 md:gap-8 lg:grid-cols-3 xl:grid-cols-5\">\n          {pillars.map((pillar) => (\n            <PillarCard key={pillar.id} pillar={pillar} />\n          ))}\n        </div>\n        <div className=\"mt-8\">\n            <h2 className=\"text-2xl font-bold tracking-tight\">About this Dashboard</h2>\n            <p className=\"text-muted-foreground mt-2\">\n              This dashboard provides a real-time overview of the World Class Engineering 2025 program. Each pillar's status is determined by the health of its sub-items. Red indicates critical issues, Amber signifies potential risks, and Green means on-track. Use the AI tools to generate summaries, analyze root causes for issues, and get recommended actions.\n            </p>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEe,SAAS;IACtB,MAAM,oBAAoB,kHAAA,CAAA,UAAO,CAAC,MAAM,CACtC,CAAC,KAAK;QACJ,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAA,GAAA,kHAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,EAAE;QAC5C,OAAO;IACT,GACA,CAAC;IAGH,MAAM,qBAAqB,kHAAA,CAAA,UAAO,CAC/B,OAAO,CAAC,CAAC,IAAM,EAAE,QAAQ,EACzB,MAAM,CACL,CAAC,KAAK;QACJ,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,MAAM;QAC5B,OAAO;IACT,GACA,CAAC;IAGL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,sIAAA,CAAA,SAAM;0BACL,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC,oIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;8BACtC,cAAA,8OAAC,uJAAA,CAAA,mBAAgB;wBACf,gBAAgB;wBAChB,iBAAiB;;;;;;;;;;;;;;;;0BAIvB,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAI,WAAU;kCACZ,kHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,CAAC,uBACZ,8OAAC,iJAAA,CAAA,aAAU;gCAAiB,QAAQ;+BAAnB,OAAO,EAAE;;;;;;;;;;kCAG9B,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;AAOtD","debugId":null}}]
}