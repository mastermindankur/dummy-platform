{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/process-excel-file.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Processes an uploaded Excel file and extracts the data.\n *\n * - processExcelFile - A function that handles parsing the Excel file.\n * - ProcessExcelFileInput - The input type for the processExcelFile function.\n * - ProcessExcelFileOutput - The return type for the processExcelFile function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport * as XLSX from 'xlsx';\n\nconst ProcessExcelFileInputSchema = z.object({\n  fileAsDataUri: z\n    .string()\n    .describe(\n      \"The Excel file content as a data URI. Expected format: 'data:<mimetype>;base64,<encoded_data>'\"\n    ),\n});\nexport type ProcessExcelFileInput = z.infer<\n  typeof ProcessExcelFileInputSchema\n>;\n\nconst ExcelRowSchema = z.record(z.any());\nexport type ExcelRow = z.infer<typeof ExcelRowSchema>;\n\nconst ProcessExcelFileOutputSchema = z.object({\n  headers: z.array(z.string()).describe('The headers of the Excel sheet.'),\n  rows: z.array(ExcelRowSchema).describe('The rows of data from the Excel sheet.'),\n});\nexport type ProcessExcelFileOutput = z.infer<\n  typeof ProcessExcelFileOutputSchema\n>;\n\nexport async function processExcelFile(\n  input: ProcessExcelFileInput\n): Promise<ProcessExcelFileOutput> {\n  return processExcelFileFlow(input);\n}\n\nconst processExcelFileFlow = ai.defineFlow(\n  {\n    name: 'processExcelFileFlow',\n    inputSchema: ProcessExcelFileInputSchema,\n    outputSchema: ProcessExcelFileOutputSchema,\n  },\n  async (input) => {\n    const base64Data = input.fileAsDataUri.split(',')[1];\n    const buffer = Buffer.from(base64Data, 'base64');\n    const workbook = XLSX.read(buffer, { type: 'buffer' });\n\n    const sheetName = workbook.SheetNames[0];\n    const worksheet = workbook.Sheets[sheetName];\n\n    const jsonData: any[][] = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n    \n    if (jsonData.length === 0) {\n      return { headers: [], rows: [] };\n    }\n\n    const headers = jsonData[0].map(String);\n    const rows = jsonData.slice(1).map(row => {\n      const rowData: ExcelRow = {};\n      headers.forEach((header, index) => {\n        rowData[header] = row[index];\n      });\n      return rowData;\n    });\n    \n    return { headers, rows };\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;AACA;;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,eAAe,uIAAA,CAAA,IAAC,CACb,MAAM,GACN,QAAQ,CACP;AAEN;AAKA,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,uIAAA,CAAA,IAAC,CAAC,GAAG;AAGrC,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACtC,MAAM,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,gBAAgB,QAAQ,CAAC;AACzC;AAKO,eAAe,iBACpB,KAA4B;IAE5B,OAAO,qBAAqB;AAC9B;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,aAAa,MAAM,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACpD,MAAM,SAAS,OAAO,IAAI,CAAC,YAAY;IACvC,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,OAAS,AAAD,EAAE,QAAQ;QAAE,MAAM;IAAS;IAEpD,MAAM,YAAY,SAAS,UAAU,CAAC,EAAE;IACxC,MAAM,YAAY,SAAS,MAAM,CAAC,UAAU;IAE5C,MAAM,WAAoB,6HAAA,CAAA,QAAU,CAAC,aAAa,CAAC,WAAW;QAAE,QAAQ;IAAE;IAE1E,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,OAAO;YAAE,SAAS,EAAE;YAAE,MAAM,EAAE;QAAC;IACjC;IAEA,MAAM,UAAU,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC;IAChC,MAAM,OAAO,SAAS,KAAK,CAAC,GAAG,GAAG,CAAC,CAAA;QACjC,MAAM,UAAoB,CAAC;QAC3B,QAAQ,OAAO,CAAC,CAAC,QAAQ;YACvB,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM;QAC9B;QACA,OAAO;IACT;IAEA,OAAO;QAAE;QAAS;IAAK;AACzB;;;IApCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {processExcelFile as '40e3115c52b484e4d78d31e4384d73e5e892404bd3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqV,GAClX,mHACA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/pillar/adopting-emerging-technologies/explore-resiliency-program/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiU,GAC9V,+FACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}