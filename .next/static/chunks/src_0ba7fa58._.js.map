{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/root-cause-analysis.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview AI flow for analyzing the root causes of Amber/Red statuses in the WCE 2025 dashboard.\n *\n * - analyzeRootCause - A function that takes a pillar name and status description and returns potential root causes.\n * - AnalyzeRootCauseInput - The input type for the analyzeRootCause function.\n * - AnalyzeRootCauseOutput - The return type for the analyzeRootCause function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeRootCauseInputSchema = z.object({\n  pillarName: z.string().describe('The name of the pillar being analyzed.'),\n  statusDescription: z.string().describe('A detailed description of the current status (Amber or Red) of the pillar.'),\n});\nexport type AnalyzeRootCauseInput = z.infer<typeof AnalyzeRootCauseInputSchema>;\n\nconst AnalyzeRootCauseOutputSchema = z.object({\n  rootCauses: z.array(z.string()).describe('A list of potential root causes for the given status description.'),\n});\nexport type AnalyzeRootCauseOutput = z.infer<typeof AnalyzeRootCauseOutputSchema>;\n\nexport async function analyzeRootCause(input: AnalyzeRootCauseInput): Promise<AnalyzeRootCauseOutput> {\n  return analyzeRootCauseFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'rootCauseAnalysisPrompt',\n  input: {schema: AnalyzeRootCauseInputSchema},\n  output: {schema: AnalyzeRootCauseOutputSchema},\n  prompt: `You are an expert consultant in World Class Engineering, skilled at identifying the underlying causes of program issues.\n\n  Analyze the following information to determine the potential root causes of the reported status. Provide a numbered list of the top potential root causes.\n\nPillar Name: {{{pillarName}}}\nStatus Description: {{{statusDescription}}}\n\nConsider factors related to productivity, product reliability, design resilience, technology adoption, and governance.\n`,\n});\n\nconst analyzeRootCauseFlow = ai.defineFlow(\n  {\n    name: 'analyzeRootCauseFlow',\n    inputSchema: AnalyzeRootCauseInputSchema,\n    outputSchema: AnalyzeRootCauseOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwBsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/root-cause-analysis.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { analyzeRootCause } from \"@/ai/flows/root-cause-analysis\";\nimport type { SubItem } from \"@/types\";\nimport { Search, Loader2 } from \"lucide-react\";\n\ntype Props = {\n  subItem: SubItem;\n  pillarName: string;\n};\n\nexport function RootCauseAnalysis({ subItem, pillarName }: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [rootCauses, setRootCauses] = useState<string[]>([]);\n\n  const handleGenerate = async () => {\n    setIsLoading(true);\n    setRootCauses([]);\n    try {\n      const result = await analyzeRootCause({\n        pillarName: pillarName,\n        statusDescription: `The sub-item '${subItem.name}' has a status of ${subItem.status}. This item tracks: ${subItem.description}.`,\n      });\n      setRootCauses(result.rootCauses);\n    } catch (error) {\n      console.error(\"Error generating root cause analysis:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to generate root cause analysis. Please try again.\",\n        variant: \"destructive\",\n      });\n      setIsOpen(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (subItem.status === \"Green\") {\n    return null;\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button onClick={handleGenerate} variant=\"ghost\" size=\"sm\">\n          <Search className=\"mr-2 h-4 w-4\" />\n          Analyze Root Cause\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[625px]\">\n        <DialogHeader>\n          <DialogTitle>Root Cause Analysis for {subItem.name}</DialogTitle>\n          <DialogDescription>\n            AI-generated potential root causes for the '{subItem.status}'\n            status.\n          </DialogDescription>\n        </DialogHeader>\n        <ScrollArea className=\"max-h-[60vh] pr-4\">\n          {isLoading && (\n            <div className=\"flex items-center justify-center p-8\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n            </div>\n          )}\n          {rootCauses.length > 0 && (\n            <ul className=\"list-disc space-y-2 pl-5 text-sm\">\n              {rootCauses.map((cause, index) => (\n                <li key={index}>{cause}</li>\n              ))}\n            </ul>\n          )}\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAQA;AACA;AACA;AAEA;AAAA;;;AAhBA;;;;;;;;AAuBO,SAAS,kBAAkB,EAAE,OAAO,EAAE,UAAU,EAAS;;IAC9D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEzD,MAAM,iBAAiB;QACrB,aAAa;QACb,cAAc,EAAE;QAChB,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,6JAAA,CAAA,mBAAgB,AAAD,EAAE;gBACpC,YAAY;gBACZ,mBAAmB,CAAC,cAAc,EAAE,QAAQ,IAAI,CAAC,kBAAkB,EAAE,QAAQ,MAAM,CAAC,oBAAoB,EAAE,QAAQ,WAAW,CAAC,CAAC,CAAC;YAClI;YACA,cAAc,OAAO,UAAU;QACjC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yCAAyC;YACvD,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;YACA,UAAU;QACZ,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAI,QAAQ,MAAM,KAAK,SAAS;QAC9B,OAAO;IACT;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;;0BAClC,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,OAAO;0BACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAS;oBAAgB,SAAQ;oBAAQ,MAAK;;sCACpD,6LAAC,yMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;0BAIvC,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,cAAW;;oCAAC;oCAAyB,QAAQ,IAAI;;;;;;;0CAClD,6LAAC,qIAAA,CAAA,oBAAiB;;oCAAC;oCAC4B,QAAQ,MAAM;oCAAC;;;;;;;;;;;;;kCAIhE,6LAAC,6IAAA,CAAA,aAAU;wBAAC,WAAU;;4BACnB,2BACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;;;;;;4BAGtB,WAAW,MAAM,GAAG,mBACnB,6LAAC;gCAAG,WAAU;0CACX,WAAW,GAAG,CAAC,CAAC,OAAO,sBACtB,6LAAC;kDAAgB;uCAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzB;GAhEgB;KAAA","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/action-recommendations.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates action recommendations for pillars with Amber or Red statuses.\n *\n * - getActionRecommendations - A function that generates action recommendations for pillars with Amber or Red statuses.\n * - ActionRecommendationsInput - The input type for the getActionRecommendations function.\n * - ActionRecommendationsOutput - The return type for the getActionRecommendations function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ActionRecommendationsInputSchema = z.object({\n  pillarName: z.string().describe('The name of the pillar.'),\n  pillarStatus: z.enum(['Green', 'Amber', 'Red']).describe('The health status of the pillar.'),\n  subItems: z.array(\n    z.object({\n      name: z.string().describe('The name of the sub-item.'),\n      status: z.enum(['Green', 'Amber', 'Red']).describe('The health status of the sub-item.'),\n    })\n  ).describe('An array of sub-items with their names and health statuses.'),\n});\nexport type ActionRecommendationsInput = z.infer<typeof ActionRecommendationsInputSchema>;\n\nconst ActionRecommendationsOutputSchema = z.object({\n  recommendations: z.array(z.string()).describe('An array of action recommendations.'),\n});\nexport type ActionRecommendationsOutput = z.infer<typeof ActionRecommendationsOutputSchema>;\n\nexport async function getActionRecommendations(input: ActionRecommendationsInput): Promise<ActionRecommendationsOutput> {\n  return actionRecommendationsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'actionRecommendationsPrompt',\n  input: {schema: ActionRecommendationsInputSchema},\n  output: {schema: ActionRecommendationsOutputSchema},\n  prompt: `You are an expert consultant providing action recommendations for a program called World Class Engineering 2025.\n\nYou are provided with the pillar name, its overall health status, and a list of sub-items with their health statuses.\n\nPillar Name: {{{pillarName}}}\nPillar Status: {{{pillarStatus}}}\nSub-items:\n{{#each subItems}}\n- Name: {{{name}}}, Status: {{{status}}}\n{{/each}}\n\nBased on this information, provide a list of immediate action recommendations to address the pillar's health status. Focus on actions that can be taken to improve Amber or Red statuses.\n\nFormat your response as a numbered list of recommendations.\n`,\n});\n\nconst actionRecommendationsFlow = ai.defineFlow(\n  {\n    name: 'actionRecommendationsFlow',\n    inputSchema: ActionRecommendationsInputSchema,\n    outputSchema: ActionRecommendationsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA8BsB,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/action-recommendations.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { getActionRecommendations } from \"@/ai/flows/action-recommendations\";\nimport type { SubItem } from \"@/types\";\nimport { Lightbulb, Loader2 } from \"lucide-react\";\n\ntype ActionRecommendationsProps = {\n  pillarName: string;\n  pillarSubItems: Pick<SubItem, 'name' | 'status'>[];\n};\n\nexport function ActionRecommendations({ pillarName, pillarSubItems }: ActionRecommendationsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [recommendations, setRecommendations] = useState<string[]>([]);\n\n  const handleGenerate = async () => {\n    setIsLoading(true);\n    setRecommendations([]);\n    try {\n      const pillarStatus = pillarSubItems.some((s) => s.status === \"Red\")\n        ? \"Red\"\n        : pillarSubItems.some((s) => s.status === \"Amber\")\n        ? \"Amber\"\n        : \"Green\";\n\n      const result = await getActionRecommendations({\n        pillarName: pillarName,\n        pillarStatus: pillarStatus,\n        subItems: pillarSubItems.map((s) => ({\n          name: s.name,\n          status: s.status,\n        })),\n      });\n      setRecommendations(result.recommendations);\n    } catch (error) {\n      console.error(\"Error generating recommendations:\", error);\n      toast({\n        title: \"Error\",\n        description:\n          \"Failed to generate action recommendations. Please try again.\",\n        variant: \"destructive\",\n      });\n      setIsOpen(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button onClick={handleGenerate} variant=\"outline\">\n          <Lightbulb className=\"mr-2 h-4 w-4\" />\n          Get Action Recommendations\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[625px]\">\n        <DialogHeader>\n          <DialogTitle>Action Recommendations for {pillarName}</DialogTitle>\n          <DialogDescription>\n            AI-generated actions to improve pillar health.\n          </DialogDescription>\n        </DialogHeader>\n        <ScrollArea className=\"max-h-[60vh] pr-4\">\n          {isLoading && (\n            <div className=\"flex items-center justify-center p-8\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n            </div>\n          )}\n          {recommendations.length > 0 && (\n            <ul className=\"list-disc space-y-2 pl-5 text-sm\">\n              {recommendations.map((rec, index) => (\n                <li key={index}>{rec}</li>\n              ))}\n            </ul>\n          )}\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAQA;AACA;AACA;AAEA;AAAA;;;AAhBA;;;;;;;;AAuBO,SAAS,sBAAsB,EAAE,UAAU,EAAE,cAAc,EAA8B;;IAC9F,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnE,MAAM,iBAAiB;QACrB,aAAa;QACb,mBAAmB,EAAE;QACrB,IAAI;YACF,MAAM,eAAe,eAAe,IAAI,CAAC,CAAC,IAAM,EAAE,MAAM,KAAK,SACzD,QACA,eAAe,IAAI,CAAC,CAAC,IAAM,EAAE,MAAM,KAAK,WACxC,UACA;YAEJ,MAAM,SAAS,MAAM,CAAA,GAAA,6JAAA,CAAA,2BAAwB,AAAD,EAAE;gBAC5C,YAAY;gBACZ,cAAc;gBACd,UAAU,eAAe,GAAG,CAAC,CAAC,IAAM,CAAC;wBACnC,MAAM,EAAE,IAAI;wBACZ,QAAQ,EAAE,MAAM;oBAClB,CAAC;YACH;YACA,mBAAmB,OAAO,eAAe;QAC3C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;gBACJ,OAAO;gBACP,aACE;gBACF,SAAS;YACX;YACA,UAAU;QACZ,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;;0BAClC,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,OAAO;0BACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAS;oBAAgB,SAAQ;;sCACvC,6LAAC,+MAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;0BAI1C,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,cAAW;;oCAAC;oCAA4B;;;;;;;0CACzC,6LAAC,qIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,6LAAC,6IAAA,CAAA,aAAU;wBAAC,WAAU;;4BACnB,2BACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;;;;;;4BAGtB,gBAAgB,MAAM,GAAG,mBACxB,6LAAC;gCAAG,WAAU;0CACX,gBAAgB,GAAG,CAAC,CAAC,KAAK,sBACzB,6LAAC;kDAAgB;uCAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzB;GAtEgB;KAAA","debugId":null}}]
}