{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["export const WceLogo = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\n    <path d=\"M2 17l10 5 10-5\" />\n    <path d=\"M2 12l10 5 10-5\" />\n  </svg>\n);\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,CAAC,sBACtB,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACd,GAAG,KAAK;;0BAET,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;;;;;;;KAbC","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["\nimport Link from \"next/link\";\nimport { WceLogo } from \"@/components/icons\";\nimport { Button } from \"../ui/button\";\nimport { PenSquare } from \"lucide-react\";\n\nexport function Header({ children }: { children?: React.ReactNode }) {\n  return (\n    <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background/80 px-4 backdrop-blur-sm md:px-6\">\n      <nav className=\"flex w-full items-center gap-6 text-lg font-medium md:text-sm\">\n        <Link\n          href=\"/\"\n          className=\"flex items-center gap-2 text-lg font-semibold md:text-base\"\n        >\n          <WceLogo className=\"h-6 w-6 text-primary\" />\n          <span className=\"text-nowrap\">WCE 2025 Dashboard</span>\n        </Link>\n        <div className=\"ml-auto flex items-center gap-4\">\n          {children}\n           <Button asChild variant=\"outline\" size=\"sm\">\n              <Link href=\"/update-data\" target=\"_blank\">\n                  <PenSquare className=\"mr-2 h-4 w-4\" />\n                  Update Data\n              </Link>\n            </Button>\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAEO,SAAS,OAAO,EAAE,QAAQ,EAAkC;IACjE,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;;sCAEV,6LAAC,8HAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,6LAAC;4BAAK,WAAU;sCAAc;;;;;;;;;;;;8BAEhC,6LAAC;oBAAI,WAAU;;wBACZ;sCACA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,SAAQ;4BAAU,MAAK;sCACpC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAe,QAAO;;kDAC7B,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxD;KAvBgB","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 855, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pillar/making-design-resilient/squad-onboarding/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { Header } from '@/components/layout/header';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { ArrowLeft, Loader2 } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport type { ExcelData, Pillar, SubItem, ExcelRow } from '@/types';\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, ResponsiveContainer, LabelList } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport { Progress } from '@/components/ui/progress';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\n\nconst fetchSquadData = async (): Promise<ExcelData | null> => {\n  const res = await fetch('/api/data?key=squad-onboarding');\n  if (res.status === 404) {\n    return null; // No data uploaded yet\n  }\n  if (!res.ok) {\n    throw new Error('Failed to fetch SQUAD onboarding data');\n  }\n  return res.json();\n};\n\n// Fetch all pillar data to find the specific sub-item for targets\nconst fetchPillarsData = async (): Promise<Pillar[] | null> => {\n    const res = await fetch('/api/data');\n    if (!res.ok) {\n      throw new Error('Failed to fetch pillars data');\n    }\n    return res.json();\n};\n\n\nexport default function SquadOnboardingPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [excelData, setExcelData] = useState<ExcelData | null>(null);\n  const [squadSubItem, setSquadSubItem] = useState<SubItem | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        const [data, pillars] = await Promise.all([\n            fetchSquadData(),\n            fetchPillarsData()\n        ]);\n        \n        setExcelData(data);\n\n        if (pillars) {\n            const resilientDesignPillar = pillars.find(p => p.id === 'making-design-resilient');\n            const subItem = resilientDesignPillar?.subItems.find(s => s.id === 'system-scalability') || null;\n            setSquadSubItem(subItem);\n        }\n\n      } catch (error) {\n        console.error('Failed to load page data', error);\n        toast({\n          title: 'Error',\n          description: 'Could not load the SQUAD onboarding data.',\n          variant: 'destructive',\n        })\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  \n  const { categoryDistributionData, lobtDistributionData } = useMemo(() => {\n    if (!excelData?.rows) return { categoryDistributionData: [], lobtDistributionData: [] };\n\n    const categoryCounts: { [key: string]: number } = {};\n    const lobtCounts: { [key: string]: number } = {};\n    \n    excelData.rows.forEach((row: ExcelRow) => {\n        const category = row['Category'] as string;\n        if (category) {\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n        }\n\n        const lobt = row['LOBT'] as string;\n        if (lobt) {\n            lobtCounts[lobt] = (lobtCounts[lobt] || 0) + 1;\n        }\n    });\n\n    const categoryData = Object.entries(categoryCounts).map(([name, value]) => ({\n      name,\n      value,\n    }));\n\n    const lobtData = Object.entries(lobtCounts).map(([name, value]) => ({\n        name,\n        value\n    }));\n    \n    return { categoryDistributionData: categoryData, lobtDistributionData: lobtData };\n  }, [excelData]);\n\n\n  const totalOnboarded = excelData?.rows.length || 0;\n  const annualTarget = squadSubItem?.annualTarget || 0;\n  const progressPercentage = annualTarget > 0 ? (totalOnboarded / annualTarget) * 100 : 0;\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col\">\n      <Header />\n      <main className=\"flex-1 p-4 md:p-8\">\n        <div className=\"mb-4\">\n            <Button asChild variant=\"outline\">\n                <Link href=\"/pillar/making-design-resilient\">\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    Back to Pillar\n                </Link>\n            </Button>\n        </div>\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-3xl\">\n              Onboarding CAT1/CAT2 to SQUAD\n            </CardTitle>\n            <CardDescription>\n              This page displays the current data for SQUAD onboarding. To update this data, please use the Excel upload feature on the &quot;Update Data&quot; page.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoading && (\n              <div className=\"flex items-center justify-center p-8\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n              </div>\n            )}\n\n            {!isLoading && !excelData && (\n              <div className=\"text-center text-muted-foreground p-8\">\n                  No data has been uploaded for this section yet.\n              </div>\n            )}\n\n            {excelData && (\n                <div className=\"space-y-8\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Overall Progress</CardTitle>\n                            <CardDescription>Total applications onboarded against the annual target.</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"flex items-center justify-center h-full\">\n                            <div className=\"text-center\">\n                                    <p className=\"text-5xl font-bold\">{totalOnboarded}</p>\n                                    <p className=\"text-lg text-muted-foreground\">out of {annualTarget} applications</p>\n                                    <Progress value={progressPercentage} className=\"mt-4 h-3\" />\n                            </div>\n                            </div>\n                        </CardContent>\n                    </Card>\n\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>Onboarding by Category</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                            <ChartContainer config={{}} className=\"h-[400px] w-full\">\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                <BarChart data={categoryDistributionData} layout=\"vertical\" margin={{ right: 30 }}>\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis type=\"number\" allowDecimals={false} />\n                                    <YAxis dataKey=\"name\" type=\"category\" width={60} tick={{ fontSize: 12 }} />\n                                    <ChartTooltip content={<ChartTooltipContent />} />\n                                    <Bar dataKey=\"value\" fill=\"hsl(var(--chart-1))\" radius={[0, 4, 4, 0]}>\n                                       <LabelList dataKey=\"value\" position=\"right\" style={{ fill: 'hsl(var(--foreground))', fontSize: '12px' }} />\n                                    </Bar>\n                                </BarChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                            </CardContent>\n                        </Card>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>LOBT-wise Distribution</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                            <ChartContainer config={{}} className=\"h-[400px] w-full\">\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                <BarChart data={lobtDistributionData} layout=\"vertical\" margin={{ left: 10, right: 30 }}>\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis type=\"number\" allowDecimals={false} />\n                                    <YAxis dataKey=\"name\" type=\"category\" width={60} tick={{ fontSize: 12 }} />\n                                    <ChartTooltip content={<ChartTooltipContent />} />\n                                    <Bar dataKey=\"value\" fill=\"hsl(var(--chart-2))\" radius={[0, 4, 4, 0]}>\n                                        <LabelList dataKey=\"value\" position=\"right\" style={{ fill: 'hsl(var(--foreground))', fontSize: '12px' }} />\n                                    </Bar>\n                                </BarChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                            </CardContent>\n                        </Card>\n                    </div>\n                 \n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-4\">\n                    Spreadsheet Data ({totalOnboarded} Applications)\n                    </h3>\n                    <div className=\"border rounded-lg max-h-[500px] overflow-auto\">\n                    <Table>\n                        <TableHeader className=\"sticky top-0 bg-secondary\">\n                        <TableRow>\n                            {excelData.headers.map((header) => (\n                            <TableHead key={header}>{header}</TableHead>\n                            ))}\n                        </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                        {excelData.rows.map((row, rowIndex) => (\n                            <TableRow key={rowIndex}>\n                            {excelData.headers.map((header) => (\n                                <TableCell key={header}>\n                                {String(row[header] ?? '')}\n                                </TableCell>\n                            ))}\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                    </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}