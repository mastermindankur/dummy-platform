{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["export const WceLogo = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\n    <path d=\"M2 17l10 5 10-5\" />\n    <path d=\"M2 12l10 5 10-5\" />\n  </svg>\n);\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,CAAC,sBACtB,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACd,GAAG,KAAK;;0BAET,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;;;;;;;KAbC","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["\nimport Link from \"next/link\";\nimport { WceLogo } from \"@/components/icons\";\nimport { Button } from \"../ui/button\";\nimport { PenSquare } from \"lucide-react\";\n\nexport function Header({ children }: { children?: React.ReactNode }) {\n  return (\n    <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background/80 px-4 backdrop-blur-sm md:px-6\">\n      <nav className=\"flex w-full items-center gap-6 text-lg font-medium md:text-sm\">\n        <Link\n          href=\"/\"\n          className=\"flex items-center gap-2 text-lg font-semibold md:text-base\"\n        >\n          <WceLogo className=\"h-6 w-6 text-primary\" />\n          <span className=\"text-nowrap\">WCE 2025 Dashboard</span>\n        </Link>\n        <div className=\"ml-auto flex items-center gap-4\">\n          {children}\n           <Button asChild variant=\"outline\" size=\"sm\">\n              <Link href=\"/update-data\">\n                  <PenSquare className=\"mr-2 h-4 w-4\" />\n                  Update Data\n              </Link>\n            </Button>\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAEO,SAAS,OAAO,EAAE,QAAQ,EAAkC;IACjE,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;;sCAEV,6LAAC,8HAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,6LAAC;4BAAK,WAAU;sCAAc;;;;;;;;;;;;8BAEhC,6LAAC;oBAAI,WAAU;;wBACZ;sCACA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,SAAQ;4BAAU,MAAK;sCACpC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACP,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxD;KAvBgB","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pillar/making-design-resilient/jira-assistant-adoption/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Header } from '@/components/layout/header';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { ArrowLeft, Loader2 } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport type { MonthlyExcelData, ExcelRow } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend } from '@/components/ui/chart';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst fetchAdoptionData = async (): Promise<MonthlyExcelData | null> => {\n  const res = await fetch('/api/data?key=jira-assistant-adoption');\n  if (res.status === 404) {\n    return null;\n  }\n  if (!res.ok) {\n    throw new Error('Failed to fetch adoption data');\n  }\n  const data = await res.json();\n  if (Object.keys(data).length === 0) return null;\n  return data;\n};\n\ntype MonthlyStats = {\n    totalUsers: number;\n    activeUsers: number;\n    adoption: number;\n};\n\ntype TestCaseMonthlyStats = {\n    totalCases: number;\n    jaCases: number;\n    adoption: number;\n}\n\ntype PlatformAdoptionData = {\n    platform: string;\n    monthlyData: { [month: string]: MonthlyStats };\n}\n\ntype PlatformTestCaseAdoptionData = {\n    platform: string;\n    monthlyData: { [month: string]: TestCaseMonthlyStats };\n}\n\n\nexport default function JiraAssistantAdoptionPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [monthlyData, setMonthlyData] = useState<MonthlyExcelData | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchAdoptionData();\n        setMonthlyData(data);\n      } catch (error) {\n        console.error('Failed to load page data', error);\n        toast({\n          title: 'Error',\n          description: 'Could not load the Jira Assistant Adoption data.',\n          variant: 'destructive',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  const {\n    reportData,\n    sortedMonths,\n    totalRow,\n    chartData,\n    platformKeys,\n    testCaseReportData,\n    testCaseTotalRow,\n    testCaseChartData,\n    testCasePlatformKeys\n} = useMemo(() => {\n    if (!monthlyData) {\n        return {\n            reportData: [],\n            sortedMonths: [],\n            totalRow: null,\n            chartData: [],\n            platformKeys: [],\n            testCaseReportData: [],\n            testCaseTotalRow: null,\n            testCaseChartData: [],\n            testCasePlatformKeys: [],\n        };\n    }\n\n    const allMonths = Object.keys(monthlyData).sort();\n    const sortedMonthLabels = allMonths.map(m => new Date(m + '-02').toLocaleString('default', { month: 'short', year: '2-digit' }));\n    \n    // USER ADOPTION LOGIC\n    const platformMonthlyStats = new Map<string, { [month: string]: { totalUsers: Set<string>; activeUsers: Set<string> } }>();\n    \n    // TEST CASE ADOPTION LOGIC\n    const platformTestCaseStats = new Map<string, { [month: string]: { totalCases: number, jaCases: number } }>();\n\n    for (const month of allMonths) {\n        const monthLabel = new Date(month + '-02').toLocaleString('default', { month: 'short', 'year': '2-digit' });\n        const monthRows = monthlyData[month].rows;\n\n        for (const row of monthRows) {\n            const platform = (row['Platforms'] as string) || 'Unknown';\n            const userId = row['1bankid'] as string;\n            const isAdopted = row['is_created_via_JA'] === 1;\n            \n            // User Adoption Processing\n            if (!platformMonthlyStats.has(platform)) {\n                platformMonthlyStats.set(platform, {});\n            }\n            const platformData = platformMonthlyStats.get(platform)!;\n            \n            if (!platformData[monthLabel]) {\n                platformData[monthLabel] = { totalUsers: new Set(), activeUsers: new Set() };\n            }\n            const monthStats = platformData[monthLabel];\n\n            if (userId) {\n                monthStats.totalUsers.add(userId);\n                if (isAdopted) {\n                    monthStats.activeUsers.add(userId);\n                }\n            }\n\n            // Test Case Adoption Processing\n            if (row['issue_type'] === 'Test') {\n                if (!platformTestCaseStats.has(platform)) {\n                    platformTestCaseStats.set(platform, {});\n                }\n                const platformDataForTest = platformTestCaseStats.get(platform)!;\n\n                if (!platformDataForTest[monthLabel]) {\n                    platformDataForTest[monthLabel] = { totalCases: 0, jaCases: 0 };\n                }\n                const testCaseMonthStats = platformDataForTest[monthLabel];\n                testCaseMonthStats.totalCases += 1;\n                if (isAdopted) {\n                    testCaseMonthStats.jaCases += 1;\n                }\n            }\n        }\n    }\n    \n    // Final processing for User Adoption\n    const finalReportData: PlatformAdoptionData[] = [];\n    const allPlatformKeys = Array.from(platformMonthlyStats.keys()).sort();\n\n    for (const platform of allPlatformKeys) {\n        const monthMap = platformMonthlyStats.get(platform)!;\n        const platformAdoption: PlatformAdoptionData = { platform, monthlyData: {} };\n\n        for(const monthLabel of sortedMonthLabels) {\n            const stats = monthMap[monthLabel];\n            const totalUsersCount = stats?.totalUsers.size || 0;\n            const activeUsersCount = stats?.activeUsers.size || 0;\n            const adoption = totalUsersCount > 0 ? (activeUsersCount / totalUsersCount) * 100 : 0;\n            platformAdoption.monthlyData[monthLabel] = { totalUsers: totalUsersCount, activeUsers: activeUsersCount, adoption };\n        }\n        finalReportData.push(platformAdoption);\n    }\n\n    const reportDataSorted = finalReportData.sort((a, b) => a.platform.localeCompare(b.platform));\n\n    const grandTotalRow: PlatformAdoptionData = { platform: 'Total', monthlyData: {} };\n    for(const monthLabel of sortedMonthLabels) {\n        let totalUsersForMonth = 0;\n        let activeUsersForMonth = 0;\n        reportDataSorted.forEach(p => {\n            totalUsersForMonth += p.monthlyData[monthLabel]?.totalUsers || 0;\n            activeUsersForMonth += p.monthlyData[monthLabel]?.activeUsers || 0;\n        });\n        const adoption = totalUsersForMonth > 0 ? (activeUsersForMonth / totalUsersForMonth) * 100 : 0;\n        grandTotalRow.monthlyData[monthLabel] = { totalUsers: totalUsersForMonth, activeUsers: activeUsersForMonth, adoption };\n    }\n\n    const chartDataFormatted = sortedMonthLabels.map(month => {\n        const monthEntry: {[key: string]: any} = { name: month };\n        reportDataSorted.forEach(platformData => {\n            monthEntry[platformData.platform] = platformData.monthlyData[month]?.adoption.toFixed(2);\n        });\n        monthEntry['Total'] = grandTotalRow.monthlyData[month]?.adoption.toFixed(2);\n        return monthEntry;\n    });\n\n    // Final processing for Test Case Adoption\n    const finalTestCaseReportData: PlatformTestCaseAdoptionData[] = [];\n    const allTestCasePlatformKeys = Array.from(platformTestCaseStats.keys()).sort();\n\n    for (const platform of allTestCasePlatformKeys) {\n        const monthMap = platformTestCaseStats.get(platform)!;\n        const platformAdoption: PlatformTestCaseAdoptionData = { platform, monthlyData: {} };\n\n        for (const monthLabel of sortedMonthLabels) {\n            const stats = monthMap[monthLabel];\n            const totalCases = stats?.totalCases || 0;\n            const jaCases = stats?.jaCases || 0;\n            const adoption = totalCases > 0 ? (jaCases / totalCases) * 100 : 0;\n            platformAdoption.monthlyData[monthLabel] = { totalCases, jaCases, adoption };\n        }\n        finalTestCaseReportData.push(platformAdoption);\n    }\n    \n    const testCaseReportDataSorted = finalTestCaseReportData.sort((a, b) => a.platform.localeCompare(b.platform));\n    \n    const testCaseGrandTotalRow: PlatformTestCaseAdoptionData = { platform: 'Total', monthlyData: {} };\n    for (const monthLabel of sortedMonthLabels) {\n        let totalCasesForMonth = 0;\n        let jaCasesForMonth = 0;\n        testCaseReportDataSorted.forEach(l => {\n            totalCasesForMonth += l.monthlyData[monthLabel]?.totalCases || 0;\n            jaCasesForMonth += l.monthlyData[monthLabel]?.jaCases || 0;\n        });\n        const adoption = totalCasesForMonth > 0 ? (jaCasesForMonth / totalCasesForMonth) * 100 : 0;\n        testCaseGrandTotalRow.monthlyData[monthLabel] = { totalCases: totalCasesForMonth, jaCases: jaCasesForMonth, adoption };\n    }\n\n    const testCaseChartDataFormatted = sortedMonthLabels.map(month => {\n        const monthEntry: {[key: string]: any} = { name: month };\n        testCaseReportDataSorted.forEach(platformData => {\n            monthEntry[platformData.platform] = platformData.monthlyData[month]?.adoption.toFixed(2);\n        });\n        monthEntry['Total'] = testCaseGrandTotalRow.monthlyData[month]?.adoption.toFixed(2);\n        return monthEntry;\n    });\n\n    return {\n      reportData: reportDataSorted,\n      sortedMonths: sortedMonthLabels,\n      totalRow: grandTotalRow,\n      chartData: chartDataFormatted,\n      platformKeys: allPlatformKeys,\n      testCaseReportData: testCaseReportDataSorted,\n      testCaseTotalRow: testCaseGrandTotalRow,\n      testCaseChartData: testCaseChartDataFormatted,\n      testCasePlatformKeys: allTestCasePlatformKeys,\n    };\n  }, [monthlyData]);\n\n  const chartColors = [\n      'hsl(var(--chart-1))',\n      'hsl(var(--chart-2))',\n      'hsl(var(--chart-3))',\n      'hsl(var(--chart-4))',\n      'hsl(var(--chart-5))',\n      '#82ca9d',\n      '#ffc658',\n  ];\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col\">\n      <Header />\n      <main className=\"flex-1 p-4 md:p-8\">\n        <div className=\"mb-4\">\n            <Button asChild variant=\"outline\">\n                <Link href=\"/pillar/making-design-resilient\">\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    Back to Pillar\n                </Link>\n            </Button>\n        </div>\n        <div className=\"space-y-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                 <Card>\n                    <CardHeader>\n                        <CardTitle>User Adoption Trend</CardTitle>\n                        <CardDescription>Month-on-month adoption percentage.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        {isLoading && (\n                            <div className=\"flex items-center justify-center p-8 h-[400px]\">\n                                <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                            </div>\n                        )}\n                        {!isLoading && chartData.length > 0 && (\n                            <ChartContainer config={{}} className=\"h-[400px] w-full\">\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                    <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                        <XAxis dataKey=\"name\" />\n                                        <YAxis label={{ value: 'Adoption %', angle: -90, position: 'insideLeft' }} domain={[0, 100]}/>\n                                        <Tooltip content={<ChartTooltipContent indicator=\"dot\" />} />\n                                        <ChartLegend />\n                                        <Line type=\"monotone\" dataKey=\"Total\" stroke=\"#ff7300\" strokeWidth={3} name=\"Total Adoption\" />\n                                        {platformKeys.map((key, index) => (\n                                            <Line \n                                                key={key} \n                                                type=\"monotone\" \n                                                dataKey={key} \n                                                stroke={chartColors[index % chartColors.length]} \n                                                strokeWidth={2}\n                                                name={key}\n                                            />\n                                        ))}\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                        )}\n                        {!isLoading && chartData.length === 0 && (\n                             <div className=\"flex items-center justify-center h-[400px] text-muted-foreground\">\n                                No data available to display chart.\n                            </div>\n                        )}\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        <CardTitle>JA Test Cases Adoption Trend</CardTitle>\n                        <CardDescription>Month-on-month test case adoption percentage.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        {isLoading && (\n                            <div className=\"flex items-center justify-center p-8 h-[400px]\">\n                                <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                            </div>\n                        )}\n                        {!isLoading && testCaseChartData.length > 0 && (\n                            <ChartContainer config={{}} className=\"h-[400px] w-full\">\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                    <LineChart data={testCaseChartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                        <XAxis dataKey=\"name\" />\n                                        <YAxis label={{ value: 'Adoption %', angle: -90, position: 'insideLeft' }} domain={[0, 100]}/>\n                                        <Tooltip content={<ChartTooltipContent indicator=\"dot\" />} />\n                                        <ChartLegend />\n                                        <Line type=\"monotone\" dataKey=\"Total\" stroke=\"#ff7300\" strokeWidth={3} name=\"Total Adoption\" />\n                                        {testCasePlatformKeys.map((key, index) => (\n                                            <Line \n                                                key={key} \n                                                type=\"monotone\" \n                                                dataKey={key} \n                                                stroke={chartColors[index % chartColors.length]} \n                                                strokeWidth={2}\n                                                name={key}\n                                            />\n                                        ))}\n                                    </LineChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                        )}\n                        {!isLoading && testCaseChartData.length === 0 && (\n                             <div className=\"flex items-center justify-center h-[400px] text-muted-foreground\">\n                                No data available to display chart.\n                            </div>\n                        )}\n                    </CardContent>\n                </Card>\n            </div>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>User Adoption</CardTitle>\n                    <CardDescription>\n                        Month-on-month user adoption of Jira Assistant, broken down by platform.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {isLoading && (\n                    <div className=\"flex items-center justify-center p-8\">\n                        <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                    </div>\n                    )}\n\n                    {!isLoading && (!monthlyData || Object.keys(monthlyData).length === 0) && (\n                    <div className=\"text-center text-muted-foreground p-8\">\n                        No data has been uploaded for this section yet.\n                    </div>\n                    )}\n\n                    {!isLoading && monthlyData && Object.keys(monthlyData).length > 0 && (\n                        <div className=\"border rounded-lg overflow-x-auto\">\n                            <Table>\n                                <TableHeader>\n                                    <TableRow>\n                                        <TableHead className=\"min-w-[150px] sticky left-0 bg-secondary\" rowSpan={2}>Platform</TableHead>\n                                        {sortedMonths.map(month => (\n                                            <TableHead key={month} className=\"text-center min-w-[300px] border-l\" colSpan={3}>\n                                                {month}\n                                            </TableHead>\n                                        ))}\n                                    </TableRow>\n                                     <TableRow>\n                                        {sortedMonths.map(month => (\n                                            <React.Fragment key={`${month}-sub`}>\n                                                <TableHead className=\"text-right border-l\">Total Users</TableHead>\n                                                <TableHead className=\"text-right\">Active Users</TableHead>\n                                                <TableHead className=\"text-right\">Adoption %</TableHead>\n                                            </React.Fragment>\n                                        ))}\n                                    </TableRow>\n                                </TableHeader>\n                                <TableBody>\n                                    {reportData.map((item) => (\n                                        <TableRow key={item.platform}>\n                                            <TableCell className=\"font-medium sticky left-0 bg-background\">{item.platform}</TableCell>\n                                            {sortedMonths.map(month => {\n                                                const monthData = item.monthlyData[month];\n                                                return (\n                                                   <React.Fragment key={`${item.platform}-${month}`}>\n                                                        <TableCell className=\"text-right border-l\">{monthData?.totalUsers ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.activeUsers ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.adoption !== undefined ? `${monthData.adoption.toFixed(2)}%` : 'N/A'}</TableCell>\n                                                   </React.Fragment>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    ))}\n                                    {totalRow && (\n                                        <TableRow className=\"font-bold bg-secondary hover:bg-secondary/80\">\n                                            <TableCell className=\"sticky left-0 bg-secondary\">{totalRow.platform}</TableCell>\n                                            {sortedMonths.map(month => {\n                                                const monthData = totalRow.monthlyData[month];\n                                                return (\n                                                   <React.Fragment key={`total-${month}`}>\n                                                        <TableCell className=\"text-right border-l\">{monthData?.totalUsers ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.activeUsers ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.adoption !== undefined ? `${monthData.adoption.toFixed(2)}%` : 'N/A'}</TableCell>\n                                                   </React.Fragment>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </CardContent>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Jira Assist Test Cases Adoption</CardTitle>\n                    <CardDescription>Month-on-month test case adoption of Jira Assistant, broken down by Platform.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {isLoading && (\n                        <div className=\"flex items-center justify-center p-8\">\n                            <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                        </div>\n                    )}\n                    {!isLoading && testCaseReportData.length === 0 && (\n                         <div className=\"text-center text-muted-foreground p-8\">\n                            No test case data is available to display.\n                        </div>\n                    )}\n                    {!isLoading && testCaseReportData.length > 0 && (\n                         <div className=\"border rounded-lg overflow-x-auto\">\n                           <Table>\n                                <TableHeader>\n                                    <TableRow>\n                                        <TableHead className=\"min-w-[150px] sticky left-0 bg-secondary\" rowSpan={2}>Platform</TableHead>\n                                        {sortedMonths.map(month => (\n                                            <TableHead key={month} className=\"text-center min-w-[300px] border-l\" colSpan={3}>\n                                                {month}\n                                            </TableHead>\n                                        ))}\n                                    </TableRow>\n                                     <TableRow>\n                                        {sortedMonths.map(month => (\n                                            <React.Fragment key={`${month}-sub-test`}>\n                                                <TableHead className=\"text-right border-l\">Total Cases</TableHead>\n                                                <TableHead className=\"text-right\">JA Cases</TableHead>\n                                                <TableHead className=\"text-right\">Adoption %</TableHead>\n                                            </React.Fragment>\n                                        ))}\n                                    </TableRow>\n                                </TableHeader>\n                                <TableBody>\n                                    {testCaseReportData.map((item) => (\n                                        <TableRow key={item.platform}>\n                                            <TableCell className=\"font-medium sticky left-0 bg-background\">{item.platform}</TableCell>\n                                            {sortedMonths.map(month => {\n                                                const monthData = item.monthlyData[month];\n                                                return (\n                                                   <React.Fragment key={`${item.platform}-${month}`}>\n                                                        <TableCell className=\"text-right border-l\">{monthData?.totalCases ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.jaCases ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.adoption !== undefined ? `${monthData.adoption.toFixed(2)}%` : 'N/A'}</TableCell>\n                                                   </React.Fragment>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    ))}\n                                    {testCaseTotalRow && (\n                                        <TableRow className=\"font-bold bg-secondary hover:bg-secondary/80\">\n                                            <TableCell className=\"sticky left-0 bg-secondary\">{testCaseTotalRow.platform}</TableCell>\n                                            {sortedMonths.map(month => {\n                                                const monthData = testCaseTotalRow.monthlyData[month];\n                                                return (\n                                                   <React.Fragment key={`total-test-${month}`}>\n                                                        <TableCell className=\"text-right border-l\">{monthData?.totalCases ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.jaCases ?? 'N/A'}</TableCell>\n                                                        <TableCell className=\"text-right\">{monthData?.adoption !== undefined ? `${monthData.adoption.toFixed(2)}%` : 'N/A'}</TableCell>\n                                                   </React.Fragment>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                         </div>\n                    )}\n                </CardContent>\n            </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}